{"version":3,"sources":["webpack:///./components/Header.js?7ca2","webpack:///./pages/reService/listings/media/listingImages.js?7802","webpack:///./routes.js?817c"],"names":["marginTop","ListingImageSummary","state","ipfsHash","buffer","ethAddress","blockNumber","transactionHash","gasUsed","txReceipt","loading","errorMessage","captureFile","setState","event","stopPropagation","preventDefault","file","target","files","console","log","reader","window","FileReader","readAsArrayBuffer","onloadend","convertToBuffer","Buffer","from","result","onClick","onSubmit","web3","eth","getTransactionReceipt","err","message","createMediaLink","props","propertyId","getAccounts","accounts","reService","REService","methods","uploadPropertyMedia","send","address","Router","pushRoute","ipfs","add","hash","sendHash","error","list","map","mediaURL","float","display","renderMedia","query","getPropertyMediaCount","call","listingsCount","Promise","all","Array","parseInt","fill","element","index","propertyMediaData","listings","filter","routes","require","module","exports"],"mappings":"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","file":"6.70a24720eb2524bdc8ad.hot-update.js","sourcesContent":["import React from \"react\";\nimport { Menu } from \"semantic-ui-react\";\nimport { Link } from \"../routes\";\n\nexport default () => {\n  return (\n    <Menu style={{ marginTop: \"10px\" }}>\n      <Link route=\"/\">\n        <a className=\"item\">BlockChain CBRE Listings</a>\n      </Link>\n      <Menu.Menu position=\"right\">\n        <Link route=\"/\">\n          <a className=\"item\">Contracts</a>\n        </Link>\n        <Link route=\"/reService/new\">\n          <a className=\"item\">+</a>\n        </Link>\n      </Menu.Menu>\n    </Menu>\n  );\n};\n\n\n\n// WEBPACK FOOTER //\n// ./components/Header.js","import React, { Component } from \"react\";\nimport {\n  Form,\n  Button,\n  Spinner,\n  Message,\n  Input,\n  Image,\n  Loader\n} from \"semantic-ui-react\";\nimport { Router } from \"../../../../routes\";\nimport Layout from \"../../../../components/Layout\";\nimport REService from \"../../../../ethereum/reService\";\nimport ipfs from \"../../../../ethereum/ipfs\";\nimport web3 from \"../../../../ethereum/web3\";\n\nclass ListingImageSummary extends Component {\n  state = {\n    ipfsHash: null,\n    buffer: \"\",\n    ethAddress: \"\",\n    blockNumber: \"\",\n    transactionHash: \"\",\n    gasUsed: \"\",\n    txReceipt: \"\",\n    loading: false,\n    errorMessage: \"\"\n  };\n\n  static async getInitialProps(props) {\n    const { address, propertyId } = props.query;\n    console.log(\"Address Is -> \" + address);\n    console.log(\"The Selected Property ID is ->\" + propertyId);\n    const reService = REService(address);\n\n    try {\n      const listingsCount = await reService.methods\n        .getPropertyMediaCount()\n        .call();\n\n      console.log(\"Total Image Count -> \" + listingsCount);\n      const listings = await Promise.all(\n        Array(parseInt(listingsCount))\n          .fill()\n\n          .map((element, index) => {\n            return reService.methods.propertyMediaData(index).call();\n          })\n      );\n\n      let list = listings.filter(list => {\n        //console.log(list.propertyId);\n        if (list.propertyId == propertyId) {\n          return list;\n        }\n      });\n\n      console.log(list);\n\n      //console.log(listings);\n      return {\n        list,\n        listingsCount,\n        address,\n        propertyId\n      };\n    } catch (err) {\n      console.log(\"Oops -> \" + err.message);\n    }\n  }\n\n  captureFile = event => {\n    this.setState({ loading: true, errorMessage: \"\" });\n    event.stopPropagation();\n    event.preventDefault();\n    const file = event.target.files[0];\n\n    console.log(\"Got file\", file);\n\n    let reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n    reader.onloadend = () => this.convertToBuffer(reader);\n  };\n  convertToBuffer = async reader => {\n    //file is converted to a buffer for upload to IPFS\n    const buffer = await Buffer.from(reader.result);\n    //set this buffer -using es6 syntax\n    this.setState({ buffer });\n    this.onClick();\n    this.onSubmit();\n    console.log(\"Loading State is False\");\n  };\n\n  onClick = async () => {\n    try {\n      console.log(\"Entered OnClick\");\n      this.setState({ blockNumber: \"waiting..\" });\n      this.setState({ gasUsed: \"waiting...\" });\n      //get Transaction Receipt in console on click\n      //See: https://web3js.readthedocs.io/en/1.0/web3-eth.html#gettransactionreceipt\n      await web3.eth.getTransactionReceipt(\n        this.state.transactionHash,\n        (err, txReceipt) => {\n          console.log(err, txReceipt);\n          this.setState({ txReceipt });\n        }\n      ); //await for getTransactionReceipt\n      await this.setState({ blockNumber: this.state.txReceipt.blockNumber });\n      await this.setState({ gasUsed: this.state.txReceipt.gasUsed });\n    } catch (error) {\n      //try\n\n      console.log(error);\n      this.setState({ errorMessage: error.message });\n    } //catch\n  }; //onClick\n  createMediaLink = async () => {\n    console.log(\"** The IPFS Hash is -> \" + this.state.ipfsHash);\n    console.log(\"** The Property ID is -> \" + this.props.propertyId);\n\n    const accounts = await web3.eth.getAccounts();\n    const reService = REService(this.state.ethAddress);\n    try {\n      await reService.methods\n        .uploadPropertyMedia(this.props.propertyId, this.state.ipfsHash)\n        .send({\n          from: accounts[0]\n        });\n\n      console.log(\"Before Router Push\");\n      console.log(`The Address is ->  ${this.props.address}`);\n      console.log(`The Propert ID is -> ${this.props.propertyId}`);\n      this.setState({ loading: false });\n\n      Router.pushRoute(\n        `/reService/${this.props.address}/listings/listingsSummary`\n      );\n    } catch (err) {\n      console.log(\"Oops Error ... \" + err.message);\n      this.setState({ errorMessage: err.message });\n    }\n  }; //createMediaLink\n  onSubmit = async event => {\n    //event.preventDefault();\n    //bring in user's metamask account address\n    const accounts = await web3.eth.getAccounts();\n\n    console.log(\"Sending from Metamask account: \" + accounts[0]);\n    console.log(\"Eth Address : \" + this.props.address);\n\n    //obtain contract address from storehash.js\n    const ethAddress = this.props.address;\n    this.setState({ ethAddress });\n    const reService = REService(ethAddress);\n    //save document to IPFS,return its hash#, and set hash# to state\n    //https://github.com/ipfs/interface-ipfs-core/blob/master/SPEC/FILES.md#add\n    await ipfs.add(this.state.buffer, (err, ipfsHash) => {\n      console.log(err, ipfsHash);\n      //setState by setting ipfsHash to ipfsHash[0].hash\n      this.setState({ ipfsHash: ipfsHash[0].hash });\n      console.log(\"The IPFS Hash is -> \" + this.state.ipfsHash);\n      // call Ethereum contract method \"sendHash\" and .send IPFS hash to etheruem contract\n      //return the transaction hash from the ethereum contract\n      //see, this https://web3js.readthedocs.io/en/1.0/web3-eth-contract.html#methods-mymethod-send\n\n      reService.methods.sendHash(this.state.ipfsHash).send(\n        {\n          from: accounts[0]\n        },\n        (error, transactionHash) => {\n          console.log(\"The Transaction Hash is \" + transactionHash);\n          this.createMediaLink();\n          this.setState({ transactionHash });\n        }\n      ); //storehash\n    }); //await ipfs.add\n    // Store the ipfsHash in Block Chain\n  }; //onSubmit\n\n  renderMedia() {\n    return this.props.list.map(list => {\n      return (\n        <img\n          key={list.propertyId}\n          class=\"ui image\"\n          src={`https://gateway.ipfs.io/ipfs/${list.mediaURL}`}\n        />\n      );\n    });\n  }\n  render() {\n    return (\n      <Layout>\n        <h3> Listing Image Summary </h3>\n\n        <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n          <div floated=\"right\" loading={this.state.loading}>\n            <label for=\"file\" class=\"ui icon button\" style={{ float: \"right\" }}>\n              <i class=\"upload icon\" />\n              &nbsp;&nbsp;Upload Media\n            </label>\n            <input\n              type=\"file\"\n              id=\"file\"\n              onChange={this.captureFile}\n              style={{ display: \"none\" }}\n            />\n            {this.state.loading ? (\n              <div class=\"ui active centered inline loader\" />\n            ) : (\n              <div class=\"none\" />\n            )}\n          </div>\n          <div class=\"ui medium images\">{this.renderMedia()}</div>\n          <Message error header=\"Oops!\" content={this.state.errorMessage} />\n        </Form>\n      </Layout>\n    );\n  }\n}\nexport default ListingImageSummary;\n\n\n\n// WEBPACK FOOTER //\n// ./pages/reService/listings/media/listingImages.js","const routes = require(\"next-routes\")();\n\nroutes\n  .add(\"/reService/new\", \"/reService/new\")\n  .add(\n    \"/reService/:address/listings/listingNew\",\n    \"/reService/listings/listingNew\"\n  )\n  .add(\n    \"/reService/:address/listings/listingsSummary\",\n    \"/reService/listings/listingsSummary\"\n  )\n  .add(\n    \"/reService/:address/listings/media/:propertyId/listingImages\",\n    \"/reService/listings/media/listingImages\"\n  );\n\nmodule.exports = routes;\n\n\n\n// WEBPACK FOOTER //\n// ./routes.js"],"sourceRoot":""}